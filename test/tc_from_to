#! ruby
require 'test/unit'
require 'base_convert'

class TestFromTo < Test::Unit::TestCase
  include BaseConvert

  def test_works
    f = (16..255).map{|i|i.to_s(16).upcase}
    o = (16..255).map{|i|i.to_s(8).upcase}

    c = FromTo.new to_base: 16
    t = (16..255).map{|i|c[i]}
    assert_equal f, t

    c = FromTo.new to_base: 8
    t = (16..255).map{|i|c[i]}
    assert_equal o, t

    c = FromTo.new base: 8, to_base: 16
    t = o.map{|s|c[s]}
    assert_equal f, t

    c = FromTo.new base: 16, to_base: 8
    t = f.map{|s|c[s]}
    assert_equal o, t

    c = FromTo.new to_digits: 'abcdefghij'
    s = c[1234567890]
    assert_equal 'bcdefghija', s
  end

  def test_raises
    message = '*'
    begin
      FromTo.new base: 10, digits: '12345'
    rescue
      message = $!.message
    end
    assert_equal 'base must cover digits', message

    c = FromTo.new to_base: 16
    message = '*'
    begin
      c[1.23]
    rescue
      message = $!.message
    end
    assert_equal 'counter must be String|Integer', message
  end
end
