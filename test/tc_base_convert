#! ruby
require 'test/unit'
require 'base_convert/base_convert'

class A
  include BaseConvert

  def initialize(integer, string, base, digits)
    @integer,@string,@base,@digits = integer,string,base,digits
  end

  def to_i
    @integer
  end

  def to_s
    @string
  end
end

class TestBaseConvert < Test::Unit::TestCase
  def test_toi
    assert_nil BaseConvert.toi('', 2, '01')
    assert_equal 0, BaseConvert.toi('_____', 4, '_123')
    assert_equal 2, BaseConvert.toi('___1_', 2, '_123')
    assert_equal 18, BaseConvert.toi('1__1_', 2, '_123')
  end

  def test_tos
    assert_equal '', BaseConvert.tos(nil, 16, '0123456789abcdef')
    assert_equal 'X', BaseConvert.tos(0, 16, 'X123456789abcdef')
    assert_equal '...', BaseConvert.tos(4095, 16, '0123456789abcde.')
  end

  def test_ascii_ordered
    assert BaseConvert.ascii_ordered? '123'
    assert BaseConvert.ascii_ordered? 'AZaz'
    refute BaseConvert.ascii_ordered? '1203'
    refute BaseConvert.ascii_ordered? 'azAZ'
  end

  def test_base_convert_mixin
    a = A.new(123, '321', 10, '0123456789')
    assert_equal 321, a.toi
    assert_equal '123', a.tos
    assert a.ascii_ordered?

    a = A.new(255, 'AA', 16, '0123456789ABCDEFzyx')
    assert_equal 170, a.toi
    assert_equal 'FF', a.tos
    refute a.ascii_ordered? # ordered would be '0123456789ABCDEFxyz'
  end
end
